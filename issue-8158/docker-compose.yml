version: '3.6'

services:
  traefik:
    # image: traefik/traefik:latest
    image: traefik:2.4
    command:
      - --api.insecure=true
      - --providers.docker
      - --log.level=DEBUG
      - --tracing.elastic=true
      - --tracing.elastic.serverurl="http://apm:8200"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    # image: traefik/whoamitcp
    image: traefik/whoami
    labels:
      traefik.http.routers.whoami.rule: Host(`whoami.localhost`)

  apm:
    image: docker.elastic.co/apm/apm-server:7.13.1
    ports:
      - "8200:8200"
    # volumes:
      # - "./apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:ro"
    labels:
      traefik.http.routers.apm.rule: Host(`apm.localhost`)
      traefik.http.services.apm.loadbalancer.server.port: 8200
    # user: apm-server
    environment:
      output.elasticsearch.hosts: elasticsearch:9200

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
    volumes:
      - './elasticsearch/data:/usr/share/elasticsearch/data'
    environment:
      cluster.name: docker-cluster
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.0
    links:
      - elasticsearch
    restart: always
    labels:
      traefik.enable: true
      traefik.http.routers.kibana.rule: Host(`kibana.localhost`)
      traefik.http.services.kibana.loadbalancer.server.port: 5601

