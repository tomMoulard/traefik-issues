version: '3.9'

services:
  traefik:
    image: traefik/traefik:latest
    # image: traefik:v2.6
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.file.directory=/dyn
      - --metrics.prometheus
      - --log.level=DEBUG
      - --entryPoints.web.address=:80
      - --entryPoints.web.http2.maxConcurrentStreams=1000
      - --entryPoints.websecure.address=:443
      - --entryPoints.websecure.http2.maxConcurrentStreams=1000
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.d:/dyn
      - ./certs:/certs
    tty: true

  whoami:
    # image: traefik/whoamitcp # https://github.com/traefik/whoamitcp
    # image: traefik/whoamiudp # https://github.com/traefik/whoamiudp
    image: traefik/whoami # https://github.com/traefik/whoami
    command: -name whoami
    labels:
      traefik.http.routers.whoami.rule: Host(`whoami.localhost`)

  grpc:
    build: ./whoamigrpc
    tty: true

  grafana:
    image: grafana/grafana:7.2.2
    volumes:
      - ./grafana:/var/lib/grafana
    user: 1000:1000
    restart: always
    depends_on:
      - prometheus
    environment:
      GF_METRICS_ENABLED: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_BASIC_ENABLED: false
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    labels:
      traefik.http.routers.grafana.rule: Host(`grafana.localhost`)

  prometheus:
    image: prom/prometheus:v2.22.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=30d
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    user: 1000:1000
    restart: always
    volumes:
      - ./prometheus/data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    labels:
      traefik.http.routers.prometheus.rule: Host(`prometheus.localhost`)
    # ports:
      # - "9090:9090"

