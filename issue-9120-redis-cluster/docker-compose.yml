version: '3.9'

services:
  traefik:
    # image: traefik/traefik:latest
    image: traefik:v2.8
    command:
      - --api.insecure=true
      - --providers.docker
      # - --providers.file.directory=/dyn
      - --log.level=DEBUG
      - --providers.redis.endpoints=redis-slave-2:6379
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./dyn:/dyn
    tty: true

  whoami:
    # image: traefik/whoamitcp # https://github.com/traefik/whoamitcp
    # image: traefik/whoamiudp # https://github.com/traefik/whoamiudp
    image: traefik/whoami # https://github.com/traefik/whoami
    command: -name whoami
    labels:
      traefik.http.routers.whoami.rule: Host(`whoami.localhost`)
      traefik.http.services.whoami.loadbalancer.server.port: 80

  redis:
    image: redis
    command:
      - redis-cli
      - --cluster
      - create
      - redis-slave-1:6379
      - redis-slave-2:6379
      - redis-slave-3:6379
      - redis-slave-4:6379
      - redis-slave-5:6379
      - redis-slave-6:6379
      - --cluster-replicas
      - "1"
      - --cluster-yes
    depends_on:
      - redis-slave-1
      - redis-slave-2
      - redis-slave-3
      - redis-slave-4
      - redis-slave-5
      - redis-slave-6

  redis-slave-1:
    image: redis
    command: redis-server --cluster-enabled yes

  redis-slave-2:
    image: redis
    command: redis-server --cluster-enabled yes

  redis-slave-3:
    image: redis
    command: redis-server --cluster-enabled yes

  redis-slave-4:
    image: redis
    command: redis-server --cluster-enabled yes

  redis-slave-5:
    image: redis
    command: redis-server --cluster-enabled yes

  redis-slave-6:
    image: redis
    command: redis-server --cluster-enabled yes
