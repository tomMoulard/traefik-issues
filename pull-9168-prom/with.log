# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 2.4582e-05
go_gc_duration_seconds{quantile="0.25"} 2.5887e-05
go_gc_duration_seconds{quantile="0.5"} 4.8721e-05
go_gc_duration_seconds{quantile="0.75"} 0.000123895
go_gc_duration_seconds{quantile="1"} 0.00018491
go_gc_duration_seconds_sum 0.000407995
go_gc_duration_seconds_count 5
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 42
# HELP go_info Information about the Go environment.
# TYPE go_info gauge
go_info{version="go1.17.11"} 1
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 1.0471096e+07
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 1.865984e+07
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.460335e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 48011
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 5.569272e+06
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 1.0471096e+07
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 3.907584e+06
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 1.1460608e+07
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 60814
# HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes gauge
go_memstats_heap_released_bytes 3.473408e+06
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 1.5368192e+07
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 1.6571874960392864e+09
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 108825
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 14400
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 16384
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 244528
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 245760
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 1.1008784e+07
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 2.490529e+06
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 1.409024e+06
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 1.409024e+06
# HELP go_memstats_sys_bytes Number of bytes obtained from system.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 2.6559496e+07
# HELP go_threads Number of OS threads created.
# TYPE go_threads gauge
go_threads 17
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 0.24
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1.048576e+06
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 15
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 6.6883584e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.65718749566e+09
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 8.23799808e+08
# HELP process_virtual_memory_max_bytes Maximum amount of virtual memory available in bytes.
# TYPE process_virtual_memory_max_bytes gauge
process_virtual_memory_max_bytes 1.8446744073709552e+19
# HELP traefik_config_last_reload_failure Last config reload failure
# TYPE traefik_config_last_reload_failure gauge
traefik_config_last_reload_failure 0
# HELP traefik_config_last_reload_success Last config reload success
# TYPE traefik_config_last_reload_success gauge
traefik_config_last_reload_success 1.657187496e+09
# HELP traefik_config_reloads_failure_total Config failure reloads
# TYPE traefik_config_reloads_failure_total counter
traefik_config_reloads_failure_total 0
# HELP traefik_config_reloads_total Config reloads
# TYPE traefik_config_reloads_total counter
traefik_config_reloads_total 2
# HELP traefik_entrypoint_open_connections How many open connections exist on an entrypoint, partitioned by method and protocol.
# TYPE traefik_entrypoint_open_connections gauge
traefik_entrypoint_open_connections{entrypoint="traefik",method="GET",protocol="http"} 1
traefik_entrypoint_open_connections{entrypoint="web",method="GET",protocol="http"} 0
traefik_entrypoint_open_connections{entrypoint="web",method="POST",protocol="http"} 0
# HELP traefik_entrypoint_request_duration_seconds How long it took to process the request on an entrypoint, partitioned by status code, protocol, and method.
# TYPE traefik_entrypoint_request_duration_seconds histogram
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="traefik",method="GET",protocol="http",le="0.1"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="traefik",method="GET",protocol="http",le="0.3"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="traefik",method="GET",protocol="http",le="1.2"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="traefik",method="GET",protocol="http",le="5"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="traefik",method="GET",protocol="http",le="+Inf"} 2
traefik_entrypoint_request_duration_seconds_sum{code="200",entrypoint="traefik",method="GET",protocol="http"} 0.000297539
traefik_entrypoint_request_duration_seconds_count{code="200",entrypoint="traefik",method="GET",protocol="http"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="GET",protocol="http",le="0.1"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="GET",protocol="http",le="0.3"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="GET",protocol="http",le="1.2"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="GET",protocol="http",le="5"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="GET",protocol="http",le="+Inf"} 2
traefik_entrypoint_request_duration_seconds_sum{code="200",entrypoint="web",method="GET",protocol="http"} 0.002027377
traefik_entrypoint_request_duration_seconds_count{code="200",entrypoint="web",method="GET",protocol="http"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="POST",protocol="http",le="0.1"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="POST",protocol="http",le="0.3"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="POST",protocol="http",le="1.2"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="POST",protocol="http",le="5"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="200",entrypoint="web",method="POST",protocol="http",le="+Inf"} 2
traefik_entrypoint_request_duration_seconds_sum{code="200",entrypoint="web",method="POST",protocol="http"} 0.000874817
traefik_entrypoint_request_duration_seconds_count{code="200",entrypoint="web",method="POST",protocol="http"} 2
traefik_entrypoint_request_duration_seconds_bucket{code="542",entrypoint="web",method="GET",protocol="http",le="0.1"} 1
traefik_entrypoint_request_duration_seconds_bucket{code="542",entrypoint="web",method="GET",protocol="http",le="0.3"} 1
traefik_entrypoint_request_duration_seconds_bucket{code="542",entrypoint="web",method="GET",protocol="http",le="1.2"} 1
traefik_entrypoint_request_duration_seconds_bucket{code="542",entrypoint="web",method="GET",protocol="http",le="5"} 1
traefik_entrypoint_request_duration_seconds_bucket{code="542",entrypoint="web",method="GET",protocol="http",le="+Inf"} 1
traefik_entrypoint_request_duration_seconds_sum{code="542",entrypoint="web",method="GET",protocol="http"} 0.000396421
traefik_entrypoint_request_duration_seconds_count{code="542",entrypoint="web",method="GET",protocol="http"} 1
# HELP traefik_entrypoint_requests_total How many HTTP requests processed on an entrypoint, partitioned by status code, protocol, and method.
# TYPE traefik_entrypoint_requests_total counter
traefik_entrypoint_requests_total{code="200",entrypoint="traefik",method="GET",protocol="http"} 2
traefik_entrypoint_requests_total{code="200",entrypoint="web",method="GET",protocol="http"} 2
traefik_entrypoint_requests_total{code="200",entrypoint="web",method="POST",protocol="http"} 2
traefik_entrypoint_requests_total{code="542",entrypoint="web",method="GET",protocol="http"} 1
# HELP traefik_service_open_connections How many open connections exist on a service, partitioned by method and protocol.
# TYPE traefik_service_open_connections gauge
traefik_service_open_connections{method="GET",protocol="http",service="whoami-pull-9168-prom@docker"} 0
traefik_service_open_connections{method="POST",protocol="http",service="whoami-pull-9168-prom@docker"} 0
# HELP traefik_service_request_duration_seconds How long it took to process the request on a service, partitioned by status code, protocol, and method.
# TYPE traefik_service_request_duration_seconds histogram
traefik_service_request_duration_seconds_bucket{code="200",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="0.1"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="0.3"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="1.2"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="5"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="+Inf"} 2
traefik_service_request_duration_seconds_sum{code="200",method="GET",protocol="http",service="whoami-pull-9168-prom@docker"} 0.0010849850000000001
traefik_service_request_duration_seconds_count{code="200",method="GET",protocol="http",service="whoami-pull-9168-prom@docker"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="POST",protocol="http",service="whoami-pull-9168-prom@docker",le="0.1"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="POST",protocol="http",service="whoami-pull-9168-prom@docker",le="0.3"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="POST",protocol="http",service="whoami-pull-9168-prom@docker",le="1.2"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="POST",protocol="http",service="whoami-pull-9168-prom@docker",le="5"} 2
traefik_service_request_duration_seconds_bucket{code="200",method="POST",protocol="http",service="whoami-pull-9168-prom@docker",le="+Inf"} 2
traefik_service_request_duration_seconds_sum{code="200",method="POST",protocol="http",service="whoami-pull-9168-prom@docker"} 0.0005756450000000001
traefik_service_request_duration_seconds_count{code="200",method="POST",protocol="http",service="whoami-pull-9168-prom@docker"} 2
traefik_service_request_duration_seconds_bucket{code="542",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="0.1"} 1
traefik_service_request_duration_seconds_bucket{code="542",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="0.3"} 1
traefik_service_request_duration_seconds_bucket{code="542",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="1.2"} 1
traefik_service_request_duration_seconds_bucket{code="542",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="5"} 1
traefik_service_request_duration_seconds_bucket{code="542",method="GET",protocol="http",service="whoami-pull-9168-prom@docker",le="+Inf"} 1
traefik_service_request_duration_seconds_sum{code="542",method="GET",protocol="http",service="whoami-pull-9168-prom@docker"} 0.000210695
traefik_service_request_duration_seconds_count{code="542",method="GET",protocol="http",service="whoami-pull-9168-prom@docker"} 1
# HELP traefik_service_requests_total How many HTTP requests processed on a service, partitioned by status code, protocol, and method.
# TYPE traefik_service_requests_total counter
traefik_service_requests_total{code="200",method="GET",protocol="http",service="whoami-pull-9168-prom@docker"} 2
traefik_service_requests_total{code="200",method="POST",protocol="http",service="whoami-pull-9168-prom@docker"} 2
traefik_service_requests_total{code="542",method="GET",protocol="http",service="whoami-pull-9168-prom@docker"} 1
